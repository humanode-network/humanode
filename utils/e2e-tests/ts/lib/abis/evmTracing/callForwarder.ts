// pragma solidity >=0.8.3;
//
// contract CallForwarder {
//     function call(
//         address target,
//         bytes memory data
//     ) public returns (bool, bytes memory) {
//         return target.call(data);
//     }
//
//     function callRange(address first, address last) public {
//         require(first < last, "invalid range");
//         while (first < last) {
//             first.call("");
//             first = address(uint160(first) + 1);
//         }
//     }
//
//     function delegateCall(
//         address target,
//         bytes memory data
//     ) public returns (bool, bytes memory) {
//         return target.delegatecall(data);
//     }
// }

export default {
  abi: [
    {
      inputs: [
        {
          internalType: "address",
          name: "target",
          type: "address",
        },
        {
          internalType: "bytes",
          name: "data",
          type: "bytes",
        },
      ],
      name: "call",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
        {
          internalType: "bytes",
          name: "",
          type: "bytes",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "first",
          type: "address",
        },
        {
          internalType: "address",
          name: "last",
          type: "address",
        },
      ],
      name: "callRange",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "target",
          type: "address",
        },
        {
          internalType: "bytes",
          name: "data",
          type: "bytes",
        },
      ],
      name: "delegateCall",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
        {
          internalType: "bytes",
          name: "",
          type: "bytes",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  bytecode:
    "0x6080604052348015600e575f5ffd5b5061076d8061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c80630382943f146100435780631b8b921d1461005f57806356e7b7aa14610090575b5f5ffd5b61005d6004803603810190610058919061032e565b6100c1565b005b610079600480360381019061007491906104a8565b6101e0565b604051610087929190610596565b60405180910390f35b6100aa60048036038101906100a591906104a8565b610252565b6040516100b8929190610596565b60405180910390f35b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161061012f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101269061061e565b60405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1610156101dc578173ffffffffffffffffffffffffffffffffffffffff1660405161018790610669565b5f604051808303815f865af19150503d805f81146101c0576040519150601f19603f3d011682016040523d82523d5f602084013e6101c5565b606091505b5050506001826101d591906106aa565b9150610130565b5050565b5f60608373ffffffffffffffffffffffffffffffffffffffff16836040516102089190610721565b5f604051808303815f865af19150503d805f8114610241576040519150601f19603f3d011682016040523d82523d5f602084013e610246565b606091505b50915091509250929050565b5f60608373ffffffffffffffffffffffffffffffffffffffff168360405161027a9190610721565b5f60405180830381855af49150503d805f81146102b2576040519150601f19603f3d011682016040523d82523d5f602084013e6102b7565b606091505b50915091509250929050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102fd826102d4565b9050919050565b61030d816102f3565b8114610317575f5ffd5b50565b5f8135905061032881610304565b92915050565b5f5f60408385031215610344576103436102cc565b5b5f6103518582860161031a565b92505060206103628582860161031a565b9150509250929050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6103ba82610374565b810181811067ffffffffffffffff821117156103d9576103d8610384565b5b80604052505050565b5f6103eb6102c3565b90506103f782826103b1565b919050565b5f67ffffffffffffffff82111561041657610415610384565b5b61041f82610374565b9050602081019050919050565b828183375f83830152505050565b5f61044c610447846103fc565b6103e2565b90508281526020810184848401111561046857610467610370565b5b61047384828561042c565b509392505050565b5f82601f83011261048f5761048e61036c565b5b813561049f84826020860161043a565b91505092915050565b5f5f604083850312156104be576104bd6102cc565b5b5f6104cb8582860161031a565b925050602083013567ffffffffffffffff8111156104ec576104eb6102d0565b5b6104f88582860161047b565b9150509250929050565b5f8115159050919050565b61051681610502565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610553578082015181840152602081019050610538565b5f8484015250505050565b5f6105688261051c565b6105728185610526565b9350610582818560208601610536565b61058b81610374565b840191505092915050565b5f6040820190506105a95f83018561050d565b81810360208301526105bb818461055e565b90509392505050565b5f82825260208201905092915050565b7f696e76616c69642072616e6765000000000000000000000000000000000000005f82015250565b5f610608600d836105c4565b9150610613826105d4565b602082019050919050565b5f6020820190508181035f830152610635816105fc565b9050919050565b5f81905092915050565b50565b5f6106545f8361063c565b915061065f82610646565b5f82019050919050565b5f61067382610649565b9150819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6106b4826102d4565b91506106bf836102d4565b9250828201905073ffffffffffffffffffffffffffffffffffffffff8111156106eb576106ea61067d565b5b92915050565b5f6106fb8261051c565b610705818561063c565b9350610715818560208601610536565b80840191505092915050565b5f61072c82846106f1565b91508190509291505056fea264697066735822122061744ef3cd320f8504db2e240b6131dd71c7811dbb3c105ee2c3014e04b1635864736f6c634300081e0033",
} as const;
