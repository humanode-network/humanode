[package]
name = "humanode-peer"
version = "0.1.0"
edition = "2021"
publish = false
authors = ["Humanode Core"]

# Run the peer by default.
default-run = "humanode-peer"

[package.metadata.cargo-machete]
ignored = ["tiny-bip39"]

[dependencies]
bioauth-flow-rpc = { path = "../bioauth-flow-rpc" }
bioauth-keys = { path = "../bioauth-keys" }
crypto-utils = { path = "../crypto-utils" }
crypto-utils-evm = { path = "../crypto-utils-evm" }
humanode-rpc = { path = "../humanode-rpc" }
humanode-runtime = { path = "../humanode-runtime" }
keystore-bioauth-account-id = { path = "../keystore-bioauth-account-id" }
ngrok-api = { path = "../ngrok-api" }
robonode-client = { path = "../robonode-client" }

async-trait = { workspace = true }
clap = { workspace = true, features = ["derive"] }
codec = { workspace = true, package = "parity-scale-codec" }
fc-cli = { workspace = true }
fc-consensus = { workspace = true }
fc-db = { workspace = true, features = ["sql"] }
fc-mapping-sync = { workspace = true, features = ["sql"] }
fc-rpc = { workspace = true }
fc-rpc-core = { workspace = true }
fc-storage = { workspace = true }
fdlimit = { workspace = true }
fp-evm = { workspace = true, features = ["default"] }
frame-benchmarking = { workspace = true, optional = true }
frame-benchmarking-cli = { workspace = true, features = ["default", "rocksdb"] }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
futures = { workspace = true }
hex = { workspace = true }
hex-literal = { workspace = true }
pallet-balances = { workspace = true }
pallet-im-online = { workspace = true, features = ["default"] }
qr2term = { workspace = true }
reqwest = { workspace = true, features = ["default"] }
sc-basic-authorship = { workspace = true }
sc-chain-spec = { workspace = true }
sc-chain-spec-derive = { workspace = true }
sc-cli = { workspace = true }
sc-client-api = { workspace = true }
sc-consensus = { workspace = true }
sc-consensus-babe = { workspace = true }
sc-consensus-grandpa = { workspace = true }
sc-executor = { workspace = true }
sc-service = { workspace = true }
sc-telemetry = { workspace = true }
sc-transaction-pool = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
sp-api = { workspace = true }
sp-application-crypto = { workspace = true }
sp-consensus-babe = { workspace = true }
sp-consensus-grandpa = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-io = { workspace = true }
sp-keyring = { workspace = true }
sp-keystore = { workspace = true }
sp-panic-handler = { workspace = true }
sp-runtime = { workspace = true }
sp-timestamp = { workspace = true }
thiserror = { workspace = true }
tiny-bip39 = { workspace = true }
tokio = { workspace = true, features = ["full"] }
tracing = { workspace = true }
try-runtime-cli = { workspace = true, optional = true }
url = { workspace = true }

[dev-dependencies]
indoc = { workspace = true }
sp-io = { workspace = true }

[build-dependencies]
vergen = { workspace = true, features = ["cargo", "git", "gitcl"] }

[features]
default = ["rocksdb"]
rocksdb = ["fc-db/rocksdb"]
runtime-benchmarks = [
  "frame-benchmarking-cli/runtime-benchmarks",
  "frame-benchmarking/runtime-benchmarks",
  "frame-support/runtime-benchmarks",
  "frame-system/runtime-benchmarks",
  "humanode-runtime/runtime-benchmarks",
  "pallet-balances/runtime-benchmarks",
  "pallet-im-online/runtime-benchmarks",
  "sc-service/runtime-benchmarks",
  "sp-runtime/runtime-benchmarks",
]
try-runtime = [
  "frame-support/try-runtime",
  "frame-system/try-runtime",
  "humanode-runtime/try-runtime",
  "pallet-balances/try-runtime",
  "pallet-im-online/try-runtime",
  "sp-runtime/try-runtime",
  "try-runtime-cli/try-runtime",
]
