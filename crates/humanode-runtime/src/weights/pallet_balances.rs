// DO NOT EDIT!
//! Autogenerated weights for `pallet_balances`

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_balances`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_balances::WeightInfo for WeightInfo<T> {
  fn transfer_allow_death() -> Weight {
    // Minimum execution time: 37_000 nanoseconds.
    Weight::from_parts(37_000_000, 0)
      .saturating_add(T::DbWeight::get().reads(2))
      .saturating_add(T::DbWeight::get().writes(2))
  }
  fn transfer_keep_alive() -> Weight {
    // Minimum execution time: 25_000 nanoseconds.
    Weight::from_parts(25_000_000, 0)
      .saturating_add(T::DbWeight::get().reads(1))
      .saturating_add(T::DbWeight::get().writes(1))
  }
  fn force_set_balance_creating() -> Weight {
    // Minimum execution time: 20_000 nanoseconds.
    Weight::from_parts(20_000_000, 0)
      .saturating_add(T::DbWeight::get().reads(1))
      .saturating_add(T::DbWeight::get().writes(1))
  }
  fn force_set_balance_killing() -> Weight {
    // Minimum execution time: 21_000 nanoseconds.
    Weight::from_parts(21_000_000, 0)
      .saturating_add(T::DbWeight::get().reads(1))
      .saturating_add(T::DbWeight::get().writes(1))
  }
  fn force_transfer() -> Weight {
    // Minimum execution time: 37_000 nanoseconds.
    Weight::from_parts(37_000_000, 0)
      .saturating_add(T::DbWeight::get().reads(3))
      .saturating_add(T::DbWeight::get().writes(3))
  }
  fn transfer_all() -> Weight {
    // Minimum execution time: 30_000 nanoseconds.
    Weight::from_parts(30_000_000, 0)
      .saturating_add(T::DbWeight::get().reads(1))
      .saturating_add(T::DbWeight::get().writes(1))
  }
  fn force_unreserve() -> Weight {
    // Minimum execution time: 17_000 nanoseconds.
    Weight::from_parts(17_000_000, 0)
      .saturating_add(T::DbWeight::get().reads(1))
      .saturating_add(T::DbWeight::get().writes(1))
  }
  fn upgrade_accounts(_u: u32, ) -> Weight {
    todo!()
  }
}
