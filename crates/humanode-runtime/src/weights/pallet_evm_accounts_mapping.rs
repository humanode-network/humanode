// DO NOT EDIT!
//! Autogenerated weights for `pallet_evm_accounts_mapping`

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_evm_accounts_mapping`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_evm_accounts_mapping::WeightInfo for WeightInfo<T> {
  fn claim_account() -> Weight {
    // Proof Size summary in bytes:
    //  Measured:  `132`
    //  Estimated: `0`
    // Minimum execution time: 53_000_000 picoseconds.
    Weight::from_parts(53_000_000, 0)
      .saturating_add(T::DbWeight::get().reads(4))
      .saturating_add(T::DbWeight::get().writes(2))
  }
}
