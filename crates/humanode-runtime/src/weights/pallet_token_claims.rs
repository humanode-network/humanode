// DO NOT EDIT!
//! Autogenerated weights for `pallet_token_claims`

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_token_claims`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_token_claims::WeightInfo for WeightInfo<T> {
  fn claim() -> Weight {
    // Minimum execution time: 93_000 nanoseconds.
    Weight::from_parts(93_000_000, 0)
      .saturating_add(T::DbWeight::get().reads(8))
      .saturating_add(T::DbWeight::get().writes(5))
  }
  fn add_claim() -> Weight {
    // Minimum execution time: 31_000 nanoseconds.
    Weight::from_parts(31_000_000, 0)
      .saturating_add(T::DbWeight::get().reads(3))
      .saturating_add(T::DbWeight::get().writes(4))
  }
  fn remove_claim() -> Weight {
    // Minimum execution time: 30_000 nanoseconds.
    Weight::from_parts(30_000_000, 0)
      .saturating_add(T::DbWeight::get().reads(3))
      .saturating_add(T::DbWeight::get().writes(4))
  }
  fn change_claim() -> Weight {
    // Minimum execution time: 32_000 nanoseconds.
    Weight::from_parts(32_000_000, 0)
      .saturating_add(T::DbWeight::get().reads(3))
      .saturating_add(T::DbWeight::get().writes(4))
  }
}
