// DO NOT EDIT!
//! Autogenerated weights for `pallet_utility`

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_utility`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_utility::WeightInfo for WeightInfo<T> {
  /// The range of component `c` is `[0, 1000]`.
  fn batch(_c: u32, ) -> Weight {
    // Minimum execution time: 11_000 nanoseconds.
    Weight::from_ref_time(1_867_000_000)
  }
  fn as_derivative() -> Weight {
    // Minimum execution time: 13_000 nanoseconds.
    Weight::from_ref_time(13_000_000)
  }
  /// The range of component `c` is `[0, 1000]`.
  fn batch_all(_c: u32, ) -> Weight {
    // Minimum execution time: 13_000 nanoseconds.
    Weight::from_ref_time(2_124_000_000)
  }
  fn dispatch_as() -> Weight {
    // Minimum execution time: 13_000 nanoseconds.
    Weight::from_ref_time(13_000_000)
  }
  /// The range of component `c` is `[0, 1000]`.
  fn force_batch(_c: u32, ) -> Weight {
    // Minimum execution time: 10_000 nanoseconds.
    Weight::from_ref_time(1_822_000_000)
  }
}
