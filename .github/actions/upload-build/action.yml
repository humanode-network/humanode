name: "Upload build"
description: "Upload the artifacts from the build result to various locations"
inputs:
  plan-name:
    description: "What plan to use"
    required: true
outputs:
  matrix:
    description: "The build matrix generated from planning"
    value: ${{ steps.plan.outputs.matrix }}
runs:
  using: "composite"
  steps:

      - name: Set the upload params
        id: set-upload-params
        shell: bash
        env:
          PLATFORM_ARTIFACT_MARKER: ${{ matrix.plan.platform.artifactMarker }}
        run: |
          EXECUTABLE_PATH="target/release/humanode-peer"
          ARTIFACT_NAME="humanode-peer-$(rustc -vV | sed -n 's|host: ||p')"

          if [[ "$PLATFORM_ARTIFACT_MARKER" != "" ]]; then
            ARTIFACT_NAME="${ARTIFACT_NAME}-${PLATFORM_ARTIFACT_MARKER}"
          fi

          if [[ "${PATHEXT:-""}" != "" ]]; then
            EXECUTABLE_PATH="${EXECUTABLE_PATH}.exe"
          fi

          printf 'executable-path=%s\n' "$EXECUTABLE_PATH" >> "$GITHUB_OUTPUT"
          printf 'artifact-name=%s\n' "$ARTIFACT_NAME" >> "$GITHUB_OUTPUT"

          printf 'Packaged `%s` into `%s`.\n' \
            "$EXECUTABLE_PATH" \
            "$ARTIFACT_NAME" \
            >> "$GITHUB_STEP_SUMMARY"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-upload-params.outputs.artifact-name }}
          path: ${{ steps.set-upload-params.outputs.executable-path }}
          if-no-files-found: error
          retention-days: 5

      - name: Archive the binary for release
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        env:
          EXECUTABLE_NAME: ${{ steps.set-upload-params.outputs.executable-path }}
        run: utils/make-release-archive "$EXECUTABLE_NAME" archive.tar.gz

      - name: Upload release archive
        uses: shogo82148/actions-upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          upload_url: ${{ needs.draft-release.outputs.upload-url }}
          asset_name: ${{ steps.set-upload-params.outputs.artifact-name }}.tar.gz
          asset_path: archive.tar.gz
