name: code

on:
  push:
  schedule:
    - cron: '0 20 * * 0'

defaults:
  run:
    shell: bash

jobs:

  plan:
    name: Plan the execution
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Compute matrix
        uses: actions/github-script@v4
        id: set-matrix
        with:
          script: |
            const matrix = require('./.github/scripts/plan.js')
            core.setOutput('matrix', matrix)
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(steps.set-matrix.outputs.matrix) }}
        run: echo "$MATRIX_CONTEXT"

  test:
    needs:
      - plan
    strategy:
      matrix: ${{ fromJson(needs.plan.outputs.matrix) }}
      fail-fast: false
    name: ${{ matrix.platform.name }} / ${{ matrix.mode.name }}
    runs-on: ${{ matrix.platform.os }}
    env: ${{ matrix.platform.env }}
    steps:

      - name: Job config
        run: printf "%s\n" "$MATRIX_CONTEXT"
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly

      - name: Prepare the build environment
        run: ${{ matrix.platform.buildEnvScript }}

      - name: Set up Vistual Studio Command Prompt (Windows only)
        uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'

      - name: Print build environment info
        run: |
          set -x
          cargo --version
          cargo clippy --version
          env

      - name: Run cargo ${{ matrix.mode.cargoCommand }}
        uses: actions-rs/cargo@v1
        with:
          command: ${{ matrix.mode.cargoCommand }}
          args: ${{ matrix.mode.cargoArgs }}
