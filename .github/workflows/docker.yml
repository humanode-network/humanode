name: docker

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:

  docker:
    name: Docker
    runs-on: ubuntu-20.04
    timeout-minutes: 50
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        timeout-minutes: 5

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache code build
        uses: actions/cache@v2
        with:
          path: |
            target/docker/*/*/rustup/
            !target/docker/*/*/rustup/tmp/
            !target/docker/*/*/rustup/downloads/
            target/docker/*/*/cargo/bin/
            target/docker/*/*/cargo/registry/index/
            target/docker/*/*/cargo/registry/cache/
            target/docker/*/*/cargo/git/db/
            target/docker/*/*/target/
          key: docker-cargo-${{ hashFiles('rust-toolchain.toml', 'Cargo.lock') }}

      - name: Build the code and docker image
        run: docker/build.sh

      - name: Tag and push
        if: github.event_name != 'pull_request'
        run: |
          xargs docker/tag-and-push.sh humanode <<EOF
            ${{ steps.meta.outputs.tags }}
          EOF

